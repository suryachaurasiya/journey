<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="13" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="88324" started-at="2017-08-17T10:07:31Z" finished-at="2017-08-17T10:09:00Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="88324" started-at="2017-08-17T10:07:31Z" finished-at="2017-08-17T10:09:00Z">
      <class name="healthProduct.HealthProductJourneyWithExcel">
        <test-method status="PASS" signature="suiteSetUp()[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="suiteSetUp" is-config="true" duration-ms="3764" started-at="2017-08-17T15:37:31Z" finished-at="2017-08-17T15:37:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteSetUp -->
        <test-method status="PASS" signature="LaunchWebsite()[pri:1, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="LaunchWebsite" duration-ms="7747" started-at="2017-08-17T15:37:35Z" description="Open Easypolicy Website for health Product Journey" finished-at="2017-08-17T15:37:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchWebsite -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="2" started-at="2017-08-17T15:37:43Z" finished-at="2017-08-17T15:37:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LaunchWebsite status=SUCCESS method=HealthProductJourneyWithExcel.LaunchWebsite()[pri:1, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="FillLoginDetails()[pri:2, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="FillLoginDetails" duration-ms="1653" started-at="2017-08-17T15:37:43Z" description="Click on Health product link " finished-at="2017-08-17T15:37:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FillLoginDetails -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="1" started-at="2017-08-17T15:37:44Z" finished-at="2017-08-17T15:37:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FillLoginDetails status=SUCCESS method=HealthProductJourneyWithExcel.FillLoginDetails()[pri:2, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="Adult()[pri:3, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="Adult" duration-ms="4843" started-at="2017-08-17T15:37:44Z" description="Enter adult value 2" finished-at="2017-08-17T15:37:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Adult -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="0" started-at="2017-08-17T15:37:49Z" finished-at="2017-08-17T15:37:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Adult status=SUCCESS method=HealthProductJourneyWithExcel.Adult()[pri:3, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="Child()[pri:4, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="Child" duration-ms="1147" started-at="2017-08-17T15:37:49Z" description="Enter Child value 1-4" finished-at="2017-08-17T15:37:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Child -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="1" started-at="2017-08-17T15:37:50Z" finished-at="2017-08-17T15:37:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Child status=SUCCESS method=HealthProductJourneyWithExcel.Child()[pri:4, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="DOB()[pri:5, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="DOB" duration-ms="3397" started-at="2017-08-17T15:37:50Z" description="Enter DOB" finished-at="2017-08-17T15:37:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DOB -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="0" started-at="2017-08-17T15:37:54Z" finished-at="2017-08-17T15:37:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DOB status=SUCCESS method=HealthProductJourneyWithExcel.DOB()[pri:5, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="EldestMember()[pri:6, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="EldestMember" duration-ms="1117" started-at="2017-08-17T15:37:54Z" description="Select Eldest Member Gender" finished-at="2017-08-17T15:37:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EldestMember -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="0" started-at="2017-08-17T15:37:55Z" finished-at="2017-08-17T15:37:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EldestMember status=SUCCESS method=HealthProductJourneyWithExcel.EldestMember()[pri:6, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="City()[pri:7, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="City" duration-ms="1576" started-at="2017-08-17T15:37:55Z" description="Select City from list" finished-at="2017-08-17T15:37:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- City -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="0" started-at="2017-08-17T15:37:57Z" finished-at="2017-08-17T15:37:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=City status=SUCCESS method=HealthProductJourneyWithExcel.City()[pri:7, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="GetLiveQuotes()[pri:8, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="GetLiveQuotes" duration-ms="5266" started-at="2017-08-17T15:37:57Z" description="Click Get Live Quotes Button" finished-at="2017-08-17T15:38:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetLiveQuotes -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="1" started-at="2017-08-17T15:38:02Z" finished-at="2017-08-17T15:38:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GetLiveQuotes status=SUCCESS method=HealthProductJourneyWithExcel.GetLiveQuotes()[pri:8, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CustomerPopup()[pri:9, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="CustomerPopup" duration-ms="13053" started-at="2017-08-17T15:38:02Z" description="Fill Customer Name in Customer Popup" finished-at="2017-08-17T15:38:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CustomerPopup -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="0" started-at="2017-08-17T15:38:15Z" finished-at="2017-08-17T15:38:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CustomerPopup status=SUCCESS method=HealthProductJourneyWithExcel.CustomerPopup()[pri:9, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CustomerEmail()[pri:10, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="CustomerEmail" duration-ms="5027" started-at="2017-08-17T15:38:15Z" description="Fill Customer Email in Customer Popup" finished-at="2017-08-17T15:38:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CustomerEmail -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="0" started-at="2017-08-17T15:38:20Z" finished-at="2017-08-17T15:38:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CustomerEmail status=SUCCESS method=HealthProductJourneyWithExcel.CustomerEmail()[pri:10, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CustomerMobno()[pri:11, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="CustomerMobno" duration-ms="5132" started-at="2017-08-17T15:38:20Z" description="Fill Customer Mobile Number in Customer Popup" finished-at="2017-08-17T15:38:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CustomerMobno -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="0" started-at="2017-08-17T15:38:25Z" finished-at="2017-08-17T15:38:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CustomerMobno status=SUCCESS method=HealthProductJourneyWithExcel.CustomerMobno()[pri:11, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="CustomerProceed()[pri:12, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="CustomerProceed" duration-ms="5105" started-at="2017-08-17T15:38:25Z" description="Click Proceed button on Customer Popup" finished-at="2017-08-17T15:38:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CustomerProceed -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="0" started-at="2017-08-17T15:38:30Z" finished-at="2017-08-17T15:38:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CustomerProceed status=SUCCESS method=HealthProductJourneyWithExcel.CustomerProceed()[pri:12, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="QuotesBuyNow()[pri:13, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="QuotesBuyNow" duration-ms="20066" started-at="2017-08-17T15:38:30Z" description="Quotes page journey" finished-at="2017-08-17T15:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QuotesBuyNow -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="getResult" is-config="true" duration-ms="0" started-at="2017-08-17T15:38:50Z" finished-at="2017-08-17T15:38:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QuotesBuyNow status=SUCCESS method=HealthProductJourneyWithExcel.QuotesBuyNow()[pri:13, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="suiteTearDown()[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="suiteTearDown" is-config="true" duration-ms="0" started-at="2017-08-17T15:38:50Z" finished-at="2017-08-17T15:38:50Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[javax.mail.SendFailedException: Sending failed;
  nested exception is:
	class javax.mail.MessagingException: IOException while sending message;
  nested exception is:
	java.io.FileNotFoundException: C:\Users\Vijay Kumar\git\product\Product-Journey\test-outputHealthExtentReport.html (The system cannot find the file specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: javax.mail.SendFailedException: Sending failed;
  nested exception is:
	class javax.mail.MessagingException: IOException while sending message;
  nested exception is:
	java.io.FileNotFoundException: C:\Users\Vijay Kumar\git\product\Product-Journey\test-outputHealthExtentReport.html (The system cannot find the file specified)
	at healthProduct.SendMailSSL.execute(SendMailSSL.java:70)
	at healthProduct.HealthProductJourneyWithExcel.suiteTearDown(HealthProductJourneyWithExcel.java:389)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:220)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
Caused by: javax.mail.SendFailedException: Sending failed;
  nested exception is:
	class javax.mail.MessagingException: IOException while sending message;
  nested exception is:
	java.io.FileNotFoundException: C:\Users\Vijay Kumar\git\product\Product-Journey\test-outputHealthExtentReport.html (The system cannot find the file specified)
	at javax.mail.Transport.send0(Transport.java:218)
	at javax.mail.Transport.send(Transport.java:80)
	at healthProduct.SendMailSSL.execute(SendMailSSL.java:67)
	... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteTearDown -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:healthProduct.HealthProductJourneyWithExcel@8bd1b6a]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-08-17T15:39:00Z" finished-at="2017-08-17T15:39:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- healthProduct.HealthProductJourneyWithExcel -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
